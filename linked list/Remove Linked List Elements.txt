/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* removeElements(ListNode* head, int val) {
        
        
        if(head== NULL)
            return NULL;
        if (head->next==NULL)
        {
            if(head->val == val)
                return NULL;
            else
                return head;
        }
   
        
        
        
        struct ListNode *p = new ListNode();
        struct ListNode *temp = p;
        struct ListNode *q = NULL;
        
            while(head->next!= NULL)  {  
            if(head->val != val)
            {
               p->next = head;
                p = p->next;
                q= head;
                head = head->next;
            
            }
            else{
                q=head;
                    head= head->next;
            }
                
            }
        if(head->val == val)
        {
            p->next = NULL;
            
        }
        else{
            p->next = head;
            
        }
         
        
        
        
        
        
      return temp->next;  
        
         
    }
};